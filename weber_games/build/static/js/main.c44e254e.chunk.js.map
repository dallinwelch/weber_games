{"version":3,"sources":["logo.svg","LoginPage/LoginPage.js","Home/HomePage.js","LoginPage/SignUpPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","LoginPage","navigate","useNavigate","react_default","a","createElement","className","Form","Group","controlId","Label","Control","type","placeholder","Text","Button","variant","onClick","HomePage","_useState","useState","_useState2","Object","slicedToArray","errorMessage","setErrorMessage","document","getElementById","value","App","react_router_dist","exact","path","element","src_LoginPage_LoginPage","src_Home_HomePage","SignUpPage","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","dist","src_App"],"mappings":"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","file":"static/js/main.c44e254e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, { useEffect, useState } from 'react';\r\nimport './LoginPage.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst LoginPage = () => {\r\n \r\n\r\n    let navigate = useNavigate();\r\n\r\n    return (\r\n        //create a card with a username and password field\r\n        <div className=\"login-page\">\r\n        <Form>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n        <Form.Text className=\"text-muted\">\r\n          We'll never share your email with anyone else.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Password\" />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n      </Form.Group>\r\n      <div className='btnGroup'>\r\n        <Button className='submitBtn' variant=\"primary\" type=\"submit\"  onClick={() => {navigate(\"/HomePage\")}}> Submit </Button> \r\n        <Button className='newAccountBtn' variant=\"secondary\"   onClick={() => {navigate(\"/SignUpPage\")}} > Create a new account </Button>\r\n      </div>\r\n        \r\n    </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React, { useEffect, useState } from 'react';\r\nimport './HomePage.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst HomePage = () => {\r\n \r\n\r\n    let navigate = useNavigate();\r\n\r\n    return (\r\n       //create a home page\r\n        <div className=\"home-page\">\r\n        <h1>Home Page</h1>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React, { useEffect, useState } from 'react';\r\nimport './LoginPage.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst LoginPage = () => {\r\n    const [errorMessage, setErrorMessage] = useState(false);\r\n    let signInCheck = () => {\r\n        let username = document.getElementById(\"formBasicUsername\").value;\r\n        let password = document.getElementById(\"formBasicPassword\").value;\r\n        let password2 = document.getElementById(\"formBasicPassword2\").value;\r\n        // if (username === \"test\" && password === \"test\") {\r\n        //     navigate(\"/HomePage\");\r\n        // }\r\n        if(password === password2) {\r\n            setErrorMessage(false);\r\n            navigate(\"/HomePage\");\r\n        }else{\r\n            setErrorMessage(true);\r\n        }\r\n    }\r\n\r\n    let navigate = useNavigate();\r\n\r\n    return (\r\n        //create a card with a username and password field\r\n        <div className=\"login-page\">\r\n        <Form>\r\n            {!errorMessage ? <div></div> : <div className=\"error-message\">passwords do not match</div>}\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control type=\"username\" placeholder=\"Enter Username\" />\r\n        <Form.Text className=\"text-muted\">\r\n          Username Must Be Unique\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Password\" />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword2\">\r\n        <Form.Label>Re-enter Password</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Password\" />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n      </Form.Group>\r\n      <div className='btnGroup'>\r\n        {/* <Button className='submitBtn' variant=\"primary\" type=\"submit\"  onClick={() => {navigate(\"/HomePage\")}}> Submit </Button>  */}\r\n        <Button className='newAccountBtn' variant=\"secondary\"   onClick={() => {signInCheck()}} > Create New Account </Button>\r\n      </div>\r\n        \r\n    </Form>\r\n    <button className='backToLoginPageBtn'  onClick={() => {navigate(\"/LoginPage\")}}>back to log-in</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import logo from './logo.svg';\nimport React from 'react';\nimport {BrowserRouter as Router, Routes, Route, Navigate} from \"react-router-dom\";\nimport LoginPage from \"./LoginPage/LoginPage\";\nimport HomePage from \"./Home/HomePage\";\nimport SignUpPage from \"./LoginPage/SignUpPage\";\nimport './App.css';\n\nfunction App() {\n  return (\n  \n          <Routes>\n          {/* <Route exact path=\"/\" element={<LoginPage/> } /> */}\n          <Route exact path=\"/LoginPage\" element={<LoginPage/> } />\n          <Route exact path=\"/HomePage\" element={<HomePage/> } />\n          <Route exact path=\"/SignUpPage\" element={<SignUpPage/> } />\n          {/* <Route path=\"/home\" element={<HomePage/> } /> */}\n          </Routes>\n\n \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}